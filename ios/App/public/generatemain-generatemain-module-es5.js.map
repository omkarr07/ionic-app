{"version":3,"sources":["webpack:///src/app/generatemain/generatemain.page.html","webpack:///src/app/generatemain/generatemain-routing.module.ts","webpack:///src/app/generatemain/generatemain.module.ts","webpack:///src/app/generatemain/generatemain.page.scss","webpack:///src/app/generatemain/generatemain.page.ts"],"names":["routes","path","component","GeneratemainPageRoutingModule","imports","forChild","exports","GeneratemainPageModule","declarations","GeneratemainPage","nav","datePicker","menuCtrl","sb","penalty","backgroundColorByHexString","enable","show","date","Date","mode","androidTheme","ANDROID_THEMES","THEME_DEVICE_DEFAULT_LIGHT","then","mydate","getDate","getMonth","getFullYear","err","console","log","todayText","mydatem","toLocaleString","month","myDate","dd","selector","template"],"mappings":"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","file":"generatemain-generatemain-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"dashboard\\\"></ion-back-button>\\n    </ion-buttons>\\n   \\n    <ion-title>Create Bill</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <!-- <ion-card>\\n    <h6 class=\\\"ion-padding\\\" color=\\\"dark\\\">Bill Details</h6>\\n    <form action=\\\"\\\" class=\\\"ion-padding\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"\\\">Name</label>\\n        <input type=\\\"text\\\" name=\\\"\\\" id=\\\"\\\" class=\\\"form-control\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"\\\">Notes (Optional)</label>\\n        <textarea name=\\\"\\\" id=\\\"\\\" cols=\\\"10\\\" rows=\\\"3\\\" class=\\\"form-control\\\"></textarea>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"\\\">Blance-Sheet</label>\\n          <ion-select value=\\\"0\\\" interface=\\\"popover\\\" style=\\\"border: 1px solid rgb(204, 204, 204); border-radius: 5px;\\\">\\n            <ion-select-option value=\\\"0\\\">-- Choose --</ion-select-option>\\n            <ion-select-option value=\\\"1\\\">Select</ion-select-option>\\n            <ion-select-option value=\\\"2\\\">Main Balance</ion-select-option>\\n          </ion-select>\\n      </div>\\n    </form>\\n  </ion-card> -->\\n  <ion-card>\\n    <h4 class=\\\"ion-padding\\\" style=\\\"color: black;\\\">Bill Duration</h4>\\n    <form action=\\\"\\\">\\n      <div class=\\\"form-group\\\">\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <ion-label>INVOICE DATE</ion-label>\\n              <ion-item (click)=\\\"datesm()\\\">\\n                <ion-label  > {{mydatem}}    \\n                </ion-label>\\n                <ion-icon name=\\\"calendar-sharp\\\"></ion-icon>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"6\\\">\\n              \\n                <ion-label>FROM</ion-label>\\n                 <ion-item (click)=\\\"dates()\\\">\\n                   <ion-label >{{mydate}}</ion-label>\\n                   \\n                   <ion-icon name=\\\"calendar-outline\\\"></ion-icon>\\n                 </ion-item>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">\\n              <ion-label>TO</ion-label>\\n                 <ion-item (click)=\\\"dateo()\\\">\\n                   <ion-label>{{myDate}}</ion-label>\\n                   <ion-icon   name=\\\"calendar-outline\\\"></ion-icon>\\n                 </ion-item>\\n            </ion-col>  \\n          </ion-row>\\n        </ion-grid>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"12\\\">\\n              <label for=\\\"\\\">Due Date</label>\\n              <ion-item (click)=\\\"ddate()\\\">\\n                <ion-label>{{dd}}</ion-label>\\n                <ion-icon name=\\\"calendar-sharp\\\"></ion-icon>\\n              </ion-item>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </div>\\n    </form>\\n  </ion-card>\\n  <ion-card>\\n    <ion-button fill=\\\"clear\\\" expand=\\\"block\\\" [routerLink]=\\\"['/service-list']\\\" routerLinkActive=\\\"router-link-active\\\" >\\n      <ion-icon name=\\\"add-circle-outline\\\"></ion-icon>\\n      &nbsp; Add Bill Item</ion-button>\\n  </ion-card>\\n  <ion-card>\\n    <ion-card-content>\\n      <p style=\\\"color: black\\\"><b>Name : Water charges</b></p>\\n      <p>Owner Amount : </p>\\n      <p>Rent Amount : </p>\\n      <p>Closed Amount : </p><br>\\n      <ion-label color=\\\"danger\\\"> * Notice: Water reading add option come after you generate bill.* </ion-label>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n    <ion-item>\\n      <ion-label>Enable Penalty</ion-label>\\n      <ion-toggle slot=\\\"end\\\" name=\\\"penalty\\\" [(ngModel)]=\\\"penalty\\\" color=\\\"primary\\\" ></ion-toggle>\\n    </ion-item>  \\n      <div *ngIf=\\\"penalty\\\">\\n        <form action=\\\"\\\" class=\\\"ion-padding\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Select Occurance</label>\\n              <ion-select value=\\\"0\\\" interface=\\\"popover\\\" style=\\\"border: 1px solid rgb(204, 204, 204); border-radius: 5px;\\\">\\n                <ion-select-option value=\\\"0\\\">-- Choose --</ion-select-option>\\n                <ion-select-option value=\\\"1\\\">One Time</ion-select-option>\\n                <ion-select-option value=\\\"2\\\">Recurring</ion-select-option>\\n              </ion-select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Penalty rate</label>\\n              <ion-input type=\\\"number\\\" style=\\\"border: 1px solid ;\\\" placeholder=\\\"Enter penalty rate\\\"></ion-input>\\n          </div>\\n        </form>\\n      </div>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n           \\n            <ion-button expand=\\\"block\\\">Save</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n  </ion-card>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GeneratemainPage } from './generatemain.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GeneratemainPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GeneratemainPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GeneratemainPageRoutingModule } from './generatemain-routing.module';\n\nimport { GeneratemainPage } from './generatemain.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GeneratemainPageRoutingModule\n  ],\n  declarations: [GeneratemainPage]\n})\nexport class GeneratemainPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dlbmVyYXRlbWFpbi9nZW5lcmF0ZW1haW4ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { DatePicker } from '@ionic-native/date-picker/ngx';\n\nimport { MenuController, NavController } from '@ionic/angular';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n@Component({\n  selector: 'app-generatemain',\n  templateUrl: './generatemain.page.html',\n  styleUrls: ['./generatemain.page.scss'],\n})\nexport class GeneratemainPage implements OnInit {\n  mydate:string;\n  mydatem:string;\n  myDate:string;\n  dd:string;\n  penalty: any = false;\n  constructor(private nav: NavController,private datePicker : DatePicker, private menuCtrl: MenuController,private sb:StatusBar) { \n    this.sb.backgroundColorByHexString(\"#3880ff\");\n    this.menuCtrl.enable(true);}\n  \n  \n\n  ngOnInit() {\n  \n    \n  }\n  dates(){\n    \n    this.datePicker.show({\n      date: new Date(),\n      mode: 'date',\n      \n      androidTheme: this.datePicker.ANDROID_THEMES.THEME_DEVICE_DEFAULT_LIGHT\n    }).then(\n      date =>{\n        this.mydate = date.getDate()+\"/\"+date.getMonth()+\"/\"+date.getFullYear();\n      },\n      err => console.log('Error occurred while getting date: ', err)\n    );\n  }  \n\n  datesm(){\n    this.datePicker.show({\n      date: new Date(),\n      mode: 'date',\n      todayText:\"Set Today\",\n      androidTheme: this.datePicker.ANDROID_THEMES.THEME_DEVICE_DEFAULT_LIGHT\n    }).then(\n      date =>{\n        this.mydatem = date.getDate()+\"/\"+date.toLocaleString('default', { month: 'long' })+\"/\"+date.getFullYear();\n      },\n      err => console.log('Error occurred while getting date: ', err)\n    );\n  }\n\n  dateo(){\n    this.datePicker.show({\n      date: new Date(),\n      mode: 'date',\n      \n      androidTheme: this.datePicker.ANDROID_THEMES.THEME_DEVICE_DEFAULT_LIGHT\n    }).then(\n      date =>{\n        this.myDate = date.getDate()+\"/\"+date.getMonth()+\"/\"+date.getFullYear();\n      },\n      err => console.log('Error occurred while getting date: ', err)\n    );\n  }\n\n  ddate(){\n    this.datePicker.show({\n      date: new Date(),\n      mode: 'date',\n      \n      androidTheme: this.datePicker.ANDROID_THEMES.THEME_DEVICE_DEFAULT_LIGHT\n    }).then(\n      date =>{\n        this.dd = date.getDate()+\"/\"+date.getMonth()+\"/\"+date.getFullYear();\n      },\n      err => console.log('Error occurred while getting date: ', err)\n    );\n  }\n\n  \n /*  enablePenalty(){\n    this.penalty = true;\n    if (this.penalty){\n      this.penalty = false;\n    }else{\n      this.penalty = true;\n    }\n  } */\n\n}\n"]}